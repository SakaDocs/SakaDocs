"use strict";var ApplicationConfiguration={applicationModuleName:"SakaDocs - Your document finding solution",applicationModuleVendorDependencies:["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule:function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module("SakaDocs - Your document finding solution").requires.push(moduleName)}};angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$anchorScroll",function($rootScope,$anchorScroll){$rootScope.$on("$locationChangeSuccess",function(){$anchorScroll()})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("atms"),ApplicationConfiguration.registerModule("blogs"),ApplicationConfiguration.registerModule("certificates"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("dls"),ApplicationConfiguration.registerModule("nationals"),ApplicationConfiguration.registerModule("nhifs"),ApplicationConfiguration.registerModule("passports"),ApplicationConfiguration.registerModule("staffs"),ApplicationConfiguration.registerModule("students"),ApplicationConfiguration.registerModule("users"),angular.module("atms").config(["$stateProvider",function($stateProvider){$stateProvider.state("claimatm",{url:"/claimatm/:id",templateUrl:"modules/atms/views/claimatm.client.view.html"}).state("postatm",{url:"/postatm",templateUrl:"modules/atms/views/postatm.client.view.html"}).state("atms",{url:"/atms",templateUrl:"modules/atms/views/atms.client.view.html"})}]),angular.module("atms").controller("AtmsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$http.get("/atms").success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.getAlert=function(){$scope.atm.mobileNumber=Authentication.user.username,$http.post("/atmalert",$scope.atm).success(function(response){$scope.message=response.message,$scope.atm.fullNames="",$scope.atm.cardType=""}).error(function(response){$scope.error=response.message})}):$location.path("/signin")}]),angular.module("atms").controller("ClaimatmController",["$scope","$http","$location","Authentication","$stateParams","$window",function($scope,$http,$location,Authentication,$stateParams,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.showMpesa=!1,$scope.showAirtel=!1,$scope.toggleMpesa=function(){$scope.showMpesa=!0,$scope.showAirtel=!1},$scope.toggleAirtel=function(){$scope.showAirtel=!0,$scope.showMpesa=!1},$scope.claim=function(){$scope.authentication.user.accountBalance<200&&$http.get("/atm/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})}):$location.path("/signin")}]),angular.module("atms").controller("PostatmController",["$scope","$timeout","$location","$interval","Authentication","Uploadfileservice","$window",function($scope,$timeout,$location,$interval,Authentication,Uploadfileservice,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.file={},$scope.Submit=function(){$scope.uploading=!0,$scope.id.finderNumber=$scope.authentication.user.username;Uploadfileservice.upload($scope.file,$scope.id,"/postatm").then(function(data){data.data.success?($scope.alert="alert alert-success",$scope.message=data.data.message,$scope.file={},$scope.uploading=!1,$interval(function(){$location.path("/atms")},2e3,1,!1)):($scope.uploading=!1,$scope.alert="alert alert-danger",$scope.message=data.data.message,$scope.file={})})},$scope.photoChanged=function(files){if(files.length>0&&files[0].name.match(/\.(png|jpg|jpeg)$/)){$scope.uploading=!0;var file=files[0],fileReader=new FileReader;fileReader.readAsDataURL(file),fileReader.onload=function(e){$timeout(function(){$scope.thumbnail={},$scope.thumbnail.dataUrl=e.target.result,$scope.uploading=!1,$scope.message=!1})}}else $scope.thumbnail={},$scope.message=!1}):$location.path("/signin")}]),angular.module("atms").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var parsedFileSetter=$parse(attrs.fileModel).assign;element.bind("change",function(){scope.$apply(function(){parsedFileSetter(scope,element[0].files[0])})})}}}]),angular.module("atms").service("Uploadfileservice",["$http",function($http){this.upload=function(file,id,url){var data={model:id,file:file},fd=new FormData;return fd.append("iddetails",angular.toJson(data.model)),fd.append("idphoto",data.file.upload),$http.post(url,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("blogs").config(["$stateProvider",function($stateProvider){$stateProvider.state("blog/howtoclaimpayment",{url:"/blog/howtoclaimpayment",templateUrl:"modules/blogs/views/howtoclaimpayment.client.view.html"}).state("blog/howtoclaimadoc",{url:"/blog/howtoclaimadoc",templateUrl:"modules/blogs/views/howtoclaimadoc.client.view.html"}).state("blog/howtopostadoc",{url:"/blog/howtopostadoc",templateUrl:"modules/blogs/views/howtopostadoc.client.view.html"})}]),angular.module("blogs").controller("HowtoclaimadocController",["$scope",function($scope){}]),angular.module("blogs").controller("HowtoclaimpaymentController",["$scope",function($scope){}]),angular.module("blogs").controller("HowtopostadocController",["$scope",function($scope){}]),angular.module("certificates").config(["$stateProvider",function($stateProvider){$stateProvider.state("claimcertificate",{url:"/claimcertificate/:id",templateUrl:"modules/certificates/views/claimcertificate.client.view.html"}).state("postcertificate",{url:"/postcertificate",templateUrl:"modules/certificates/views/postcertificate.client.view.html"}).state("certificates",{url:"/certificates",templateUrl:"modules/certificates/views/certificates.client.view.html"})}]),angular.module("certificates").controller("CertificatesController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$http.get("/certificates").success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.getAlert=function(){$scope.certificate.mobileNumber=Authentication.user.username,$http.post("/certificatealert",$scope.certificate).success(function(response){$scope.message=response.message,$scope.certificate.institutionName="",$scope.certificate.fullNames=""}).error(function(response){$scope.error=response.message})}):$location.path("/signin")}]),angular.module("nationals").controller("ClaimcertificateController",["$scope","$http","$location","Authentication","$stateParams","$window",function($scope,$http,$location,Authentication,$stateParams,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.showMpesa=!1,$scope.showAirtel=!1,$scope.toggleMpesa=function(){$scope.showMpesa=!0,$scope.showAirtel=!1},$scope.toggleAirtel=function(){$scope.showAirtel=!0,$scope.showMpesa=!1},$scope.claim=function(){$scope.authentication.user.accountBalance<200&&$http.get("/certificate/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})}):$location.path("/signin")}]),angular.module("certificates").controller("PostcertificateController",["$scope","$timeout","$location","$interval","Authentication","Uploadfileservice","$window",function($scope,$timeout,$location,$interval,Authentication,Uploadfileservice,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.file={},$scope.Submit=function(){$scope.uploading=!0,$scope.id.finderNumber=$scope.authentication.user.username;Uploadfileservice.upload($scope.file,$scope.id,"/postcertificate").then(function(data){data.data.success?($scope.alert="alert alert-success",$scope.message=data.data.message,$scope.file={},$scope.uploading=!1,$interval(function(){$location.path("/certificates")},2e3,1,!1)):($scope.uploading=!1,$scope.alert="alert alert-danger",$scope.message=data.data.message,$scope.file={})})},$scope.photoChanged=function(files){if(files.length>0&&files[0].name.match(/\.(png|jpg|jpeg)$/)){$scope.uploading=!0;var file=files[0],fileReader=new FileReader;fileReader.readAsDataURL(file),fileReader.onload=function(e){$timeout(function(){$scope.thumbnail={},$scope.thumbnail.dataUrl=e.target.result,$scope.uploading=!1,$scope.message=!1})}}else $scope.thumbnail={},$scope.message=!1}):$location.path("/signin")}]),angular.module("certificates").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var parsedFileSetter=$parse(attrs.fileModel).assign;element.bind("change",function(){scope.$apply(function(){parsedFileSetter(scope,element[0].files[0])})})}}}]),angular.module("certificates").service("Uploadfileservice",["$http",function($http){this.upload=function(file,id,url){var data={model:id,file:file},fd=new FormData;return fd.append("iddetails",angular.toJson(data.model)),fd.append("idphoto",data.file.upload),$http.post(url,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("admindashboard",{url:"/admindashboard",templateUrl:"modules/core/views/admindashboard.client.view.html"}).state("privacypolicy",{url:"/privacypolicy",templateUrl:"modules/core/views/privacypolicy.client.view.html"}).state("dl",{url:"/dl",templateUrl:"modules/dls/views/dls.client.view.html"}).state("passport",{url:"/passport",templateUrl:"modules/passports/views/passports.client.view.html"}).state("certificate",{url:"/certificate",templateUrl:"modules/certificates/views/certificates.client.view.html"}).state("nhifcard",{url:"/nhifcard",templateUrl:"modules/nhifs/views/nhifs.client.view.html"}).state("staffid",{url:"/staffid",templateUrl:"modules/staffs/views/staffids.client.view.html"}).state("studentid",{url:"/studentid",templateUrl:"modules/students/views/studentids.client.view.html"}).state("pricingplan",{url:"/pricingplan",templateUrl:"modules/core/views/pricingplan.client.view.html"}).state("termsofuse",{url:"/termsofuse",templateUrl:"modules/core/views/termsofuse.client.view.html"}).state("payment",{url:"/payment",templateUrl:"modules/core/views/payment.client.view.html"}).state("footer",{url:"/footer",templateUrl:"modules/core/views/footer.client.view.html"}).state("atm",{url:"/atm",templateUrl:"modules/atms/views/atms.client.view.html"}).state("national",{url:"/national",templateUrl:"modules/nationals/views/nationals.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("AdmindashboardController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user&&"admin"===$scope.authentication.user.roles[0]?$scope.countUsers=function(){$http.get("/countusers").success(function(res){$scope.users=res.usersCount.toString(),$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})}:$location.path("/signin")}]),angular.module("core").controller("HeaderController",["$scope","$http","$location","Authentication","Menus","$window",function($scope,$http,$location,Authentication,Menus,$window){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.search=function(){$location.path($scope.docType)},$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.signout=function(){$http.get("/auth/signout").success(function(res){$window.sessionStorage.user=null,$location.path("/")}).error(function(res){})}}]),angular.module("core").controller("HomeController",["$scope","Authentication","$http","$location","$window",function($scope,Authentication,$http,$location,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.signout=function(){$http.get("/auth/signout").success(function(res){$window.sessionStorage.user=null}).error(function(res){})}}]),angular.module("core").controller("PricingplanController",["$scope","Authentication","$window",function($scope,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user))}]),angular.module("core").controller("PrivacypolicyController",["$scope",function($scope){}]),angular.module("core").controller("TermsofuseController",["$scope","Authentication","$window",function($scope){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user))}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||void 0===isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||void 0===roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||void 0===isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||void 0===roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("dls").config(["$stateProvider",function($stateProvider){$stateProvider.state("claimdl",{url:"/claimdl/:id",templateUrl:"modules/dls/views/claimdl.client.view.html"}).state("postdl",{url:"/postdl",templateUrl:"modules/dls/views/postdl.client.view.html"}).state("dls",{url:"/dls",templateUrl:"modules/dls/views/dls.client.view.html"})}]),angular.module("dls").controller("ClaimdlController",["$scope","$http","$location","Authentication","$stateParams","$window",function($scope,$http,$location,Authentication,$stateParams,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.showMpesa=!1,$scope.showAirtel=!1,$scope.toggleMpesa=function(){$scope.showMpesa=!0,$scope.showAirtel=!1},$scope.toggleAirtel=function(){$scope.showAirtel=!0,$scope.showMpesa=!1},$scope.claim=function(){$scope.authentication.user.accountBalance<200&&$http.get("/dl/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})}):$location.path("/signin")}]),angular.module("dls").controller("DlsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$http.get("/dls").success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.getAlert=function(){$scope.dl.mobileNumber=Authentication.user.username,$http.post("/dlalert",$scope.dl).success(function(response){$scope.message=response.message,$scope.dl.fullNames=""}).error(function(response){$scope.error=response.message})}):$location.path("/signin")}]),angular.module("dls").controller("PostdlController",["$scope","$timeout","$location","$interval","Authentication","Uploadfileservice","$window",function($scope,$timeout,$location,$interval,Authentication,Uploadfileservice,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.file={},$scope.Submit=function(){$scope.uploading=!0,$scope.id.finderNumber=$scope.authentication.user.username;Uploadfileservice.upload($scope.file,$scope.id,"/postdl").then(function(data){data.data.success?($scope.alert="alert alert-success",$scope.message=data.data.message,$scope.file={},$scope.uploading=!1,$interval(function(){$location.path("/dls")},2e3,1,!1)):($scope.uploading=!1,$scope.alert="alert alert-danger",$scope.message=data.data.message,$scope.file={})})},$scope.photoChanged=function(files){if(files.length>0&&files[0].name.match(/\.(png|jpg|jpeg)$/)){$scope.uploading=!0;var file=files[0],fileReader=new FileReader;fileReader.readAsDataURL(file),fileReader.onload=function(e){$timeout(function(){$scope.thumbnail={},$scope.thumbnail.dataUrl=e.target.result,$scope.uploading=!1,$scope.message=!1})}}else $scope.thumbnail={},$scope.message=!1}):$location.path("/signin")}]),angular.module("dls").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var parsedFileSetter=$parse(attrs.fileModel).assign;element.bind("change",function(){scope.$apply(function(){parsedFileSetter(scope,element[0].files[0])})})}}}]),angular.module("dls").service("Uploadfileservice",["$http",function($http){this.upload=function(file,id,url){var data={model:id,file:file},fd=new FormData;return fd.append("iddetails",angular.toJson(data.model)),fd.append("idphoto",data.file.upload),$http.post(url,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("nationals").config(["$stateProvider",function($stateProvider){$stateProvider.state("editid",{url:"/editid/:id",templateUrl:"modules/nationals/views/editid.client.view.html"}).state("claimid",{url:"/claimid/:id",templateUrl:"modules/nationals/views/claimid.client.view.html"}).state("postid",{url:"/postid",templateUrl:"modules/nationals/views/postid.client.view.html"}).state("nationals",{url:"/nationals",templateUrl:"modules/nationals/views/nationals.client.view.html"})}]),angular.module("nationals").controller("ClaimController",["$scope","$http","$location","Authentication","$stateParams","$window",function($scope,$http,$location,Authentication,$stateParams,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.showMpesa=!1,$scope.showAirtel=!1,$scope.toggleMpesa=function(){$scope.showMpesa=!0,$scope.showAirtel=!1},$scope.toggleAirtel=function(){$scope.showAirtel=!0,$scope.showMpesa=!1},$scope.claim=function(){$http.get("/nationalid/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})}):$location.path("/signin")}]),angular.module("nationals").controller("EditidController",["$scope","$window","Authentication","$http","$stateParams","$location",function($scope,$window,Authentication,$http,$stateParams,$location){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication?($scope.id={},$scope.getId=function(){$http.get("/nationalid/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})},$scope.updateDocument=function(isValid){isValid?($scope.success=$scope.error=null,new Users($scope.user).$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})):$scope.submitted=!0}):$location.path("/signin")}]),angular.module("nationals").controller("NationalsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$http.get("/nationalids").success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.getAlert=function(){$scope.national.mobileNumber=Authentication.user.username,$http.post("/nationalalert",$scope.national).success(function(response){$scope.message=response.message,$scope.national.idNumber=""}).error(function(response){$scope.error=response.message})}):$location.path("/signin")}]),angular.module("nationals").controller("PostController",["$scope","$timeout","$location","$interval","Authentication","Uploadfileservice","$window",function($scope,$timeout,$location,$interval,Authentication,Uploadfileservice,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.file={},$scope.Submit=function(){$scope.uploading=!0,$scope.id.finderNumber=$scope.authentication.user.username;Uploadfileservice.upload($scope.file,$scope.id,"/postnationalid").then(function(data){data.data.success?($scope.alert="alert alert-success",$scope.message=data.data.message,$scope.file={},$scope.uploading=!1,$interval(function(){$location.path("/nationals")},2e3,1,!1)):($scope.uploading=!1,$scope.alert="alert alert-danger",$scope.message=data.data.message,$scope.file={})})},$scope.photoChanged=function(files){if(files.length>0&&files[0].name.match(/\.(png|jpg|jpeg)$/)){$scope.uploading=!0;var file=files[0],fileReader=new FileReader;fileReader.readAsDataURL(file),fileReader.onload=function(e){$timeout(function(){$scope.thumbnail={},$scope.thumbnail.dataUrl=e.target.result,$scope.uploading=!1,$scope.message=!1})}}else $scope.thumbnail={},$scope.message=!1}):$location.path("/signin")}]),angular.module("nationals").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var parsedFileSetter=$parse(attrs.fileModel).assign;element.bind("change",function(){scope.$apply(function(){parsedFileSetter(scope,element[0].files[0])})})}}}]),angular.module("students").service("Uploadfileservice",["$http",function($http){this.upload=function(file,id,url){var data={model:id,file:file},fd=new FormData;return fd.append("iddetails",angular.toJson(data.model)),fd.append("idphoto",data.file.upload),$http.post(url,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("nhifs").config(["$stateProvider",function($stateProvider){$stateProvider.state("claimnhif",{url:"/claimnhif/:id",templateUrl:"modules/nhifs/views/claimnhif.client.view.html"}).state("postnhif",{url:"/postnhif",templateUrl:"modules/nhifs/views/postnhif.client.view.html"}).state("nhifs",{url:"/nhifs",templateUrl:"modules/nhifs/views/nhifs.client.view.html"})}]),angular.module("nhifs").controller("ClaimnhifController",["$scope","$http","$location","Authentication","$stateParams","$window",function($scope,$http,$location,Authentication,$stateParams,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.showMpesa=!1,$scope.showAirtel=!1,$scope.toggleMpesa=function(){$scope.showMpesa=!0,$scope.showAirtel=!1},$scope.toggleAirtel=function(){$scope.showAirtel=!0,$scope.showMpesa=!1},$scope.claim=function(){$scope.authentication.user.accountBalance<200&&$http.get("/nhifcard/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})}):$location.path("/signin")}]),angular.module("nhifs").controller("NhifsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$http.get("/nhifs").success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.getAlert=function(){$scope.nhif.mobileNumber=Authentication.user.username,$http.post("/nhifalert",$scope.nhif).success(function(response){$scope.message=response.message,$scope.nhif.companyName="",$scope.nhif.cardNumber=""}).error(function(response){$scope.error=response.message})}):$location.path("/signin")}]),angular.module("nhifs").controller("PostnhifController",["$scope","$timeout","$location","$interval","Authentication","Uploadfileservice","$window",function($scope,$timeout,$location,$interval,Authentication,Uploadfileservice,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.file={},$scope.Submit=function(){$scope.uploading=!0,$scope.id.finderNumber=$scope.authentication.user.username;Uploadfileservice.upload($scope.file,$scope.id,"/postnhifcard").then(function(data){data.data.success?($scope.alert="alert alert-success",$scope.message=data.data.message,$scope.file={},$scope.uploading=!1,$interval(function(){$location.path("/nhifs")},2e3,1,!1)):($scope.uploading=!1,$scope.alert="alert alert-danger",$scope.message=data.data.message,$scope.file={})})},$scope.photoChanged=function(files){if(files.length>0&&files[0].name.match(/\.(png|jpg|jpeg)$/)){$scope.uploading=!0;var file=files[0],fileReader=new FileReader;fileReader.readAsDataURL(file),fileReader.onload=function(e){$timeout(function(){$scope.thumbnail={},$scope.thumbnail.dataUrl=e.target.result,$scope.uploading=!1,$scope.message=!1})}}else $scope.thumbnail={},$scope.message=!1}):$location.path("/signin")}]),angular.module("nhifs").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var parsedFileSetter=$parse(attrs.fileModel).assign;element.bind("change",function(){scope.$apply(function(){parsedFileSetter(scope,element[0].files[0])})})}}}]),angular.module("nhifs").service("Uploadfileservice",["$http",function($http){this.upload=function(file,id,url){var data={model:id,file:file},fd=new FormData;return fd.append("iddetails",angular.toJson(data.model)),fd.append("idphoto",data.file.upload),$http.post(url,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("passports").config(["$stateProvider",function($stateProvider){$stateProvider.state("claimpassports",{url:"/claimpassport/:id",templateUrl:"modules/passports/views/claimpassports.client.view.html"}).state("postpassport",{url:"/postpassport",templateUrl:"modules/passports/views/postpassport.client.view.html"}).state("passports",{url:"/passports",templateUrl:"modules/passports/views/passports.client.view.html"})}]),angular.module("passports").controller("ClaimpassportController",["$scope","$http","$location","Authentication","$stateParams","$window",function($scope,$http,$location,Authentication,$stateParams,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.showMpesa=!1,$scope.showAirtel=!1,$scope.toggleMpesa=function(){$scope.showMpesa=!0,$scope.showAirtel=!1},$scope.toggleAirtel=function(){$scope.showAirtel=!0,$scope.showMpesa=!1},$scope.claim=function(){$scope.authentication.user.accountBalance<200&&$http.get("/passport/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})}):$location.path("/signin")}]),angular.module("passports").controller("PassportsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$http.get("/passports").success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.getAlert=function(){$scope.passport.mobileNumber=Authentication.user.username,$http.post("/passportalert",$scope.passport).success(function(response){$scope.message=response.message,$scope.passport.passportNumber=""}).error(function(response){$scope.error=response.message})}):$location.path("/signin")}]),angular.module("passports").controller("PostpassportController",["$scope","$timeout","$location","$interval","Authentication","Uploadfileservice","$window",function($scope,$timeout,$location,$interval,Authentication,Uploadfileservice,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.file={},$scope.Submit=function(){$scope.uploading=!0,$scope.id.finderNumber=$scope.authentication.user.username;Uploadfileservice.upload($scope.file,$scope.id,"/postpassport").then(function(data){data.data.success?($scope.alert="alert alert-success",$scope.message=data.data.message,$scope.file={},$scope.uploading=!1,$interval(function(){$location.path("/passports")},2e3,1,!1)):($scope.uploading=!1,$scope.alert="alert alert-danger",$scope.message=data.data.message,$scope.file={})})},$scope.photoChanged=function(files){if(files.length>0&&files[0].name.match(/\.(png|jpg|jpeg)$/)){$scope.uploading=!0;var file=files[0],fileReader=new FileReader;fileReader.readAsDataURL(file),fileReader.onload=function(e){$timeout(function(){$scope.thumbnail={},$scope.thumbnail.dataUrl=e.target.result,$scope.uploading=!1,$scope.message=!1})}}else $scope.thumbnail={},$scope.message=!1}):$location.path("/signin")}]),angular.module("passports").directive("fileModel",["$parse",function(){return{template:"<div></div>",restrict:"E",link:function(scope,element,attrs){element.text("this is the fileModel directive")}}}]),angular.module("passports").service("Uploadfileservice",["$http",function($http){this.upload=function(file,id,url){var data={model:id,file:file},fd=new FormData;return fd.append("iddetails",angular.toJson(data.model)),fd.append("idphoto",data.file.upload),$http.post(url,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("staffs").config(["$stateProvider",function($stateProvider){$stateProvider.state("claimstaffid",{url:"/claimstaffid/:id",templateUrl:"modules/staffs/views/claimstaffid.client.view.html"}).state("poststaffid",{url:"/poststaffid",templateUrl:"modules/staffs/views/poststaffid.client.view.html"}).state("staffids",{url:"/staffids",templateUrl:"modules/staffs/views/staffids.client.view.html"})}]),angular.module("staffs").controller("ClaimstaffidController",["$scope","$http","$location","Authentication","$stateParams","$window",function($scope,$http,$location,Authentication,$stateParams,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.showMpesa=!1,$scope.showAirtel=!1,$scope.toggleMpesa=function(){$scope.showMpesa=!0,$scope.showAirtel=!1},$scope.toggleAirtel=function(){$scope.showAirtel=!0,$scope.showMpesa=!1},$scope.claim=function(){$scope.authentication.user.accountBalance<200&&$http.get("/staffid/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})}):$location.path("/signin")}]),angular.module("staffs").controller("PoststaffidController",["$scope","$timeout","$location","$interval","Authentication","Uploadfileservice","$window",function($scope,$timeout,$location,$interval,Authentication,Uploadfileservice,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.file={},$scope.Submit=function(){$scope.uploading=!0,$scope.id.finderNumber=$scope.authentication.user.username;Uploadfileservice.upload($scope.file,$scope.id,"/poststaffid").then(function(data){data.data.success?($scope.alert="alert alert-success",$scope.message=data.data.message,$scope.file={},$scope.uploading=!1,$interval(function(){$location.path("/staffids")},2e3,1,!1)):($scope.uploading=!1,$scope.alert="alert alert-danger",$scope.message=data.data.message,$scope.file={})})},$scope.photoChanged=function(files){if(files.length>0&&files[0].name.match(/\.(png|jpg|jpeg)$/)){$scope.uploading=!0;var file=files[0],fileReader=new FileReader;fileReader.readAsDataURL(file),fileReader.onload=function(e){$timeout(function(){$scope.thumbnail={},$scope.thumbnail.dataUrl=e.target.result,$scope.uploading=!1,$scope.message=!1})}}else $scope.thumbnail={},$scope.message=!1}):$location.path("/signin")}]),angular.module("staffs").controller("StaffidsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$http.get("/staffids").success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.getAlert=function(){$scope.staffId.mobileNumber=Authentication.user.username,$http.post("/staffidalert",$scope.staffId).success(function(response){$scope.message=response.message,$scope.staffId.companyName="",$scope.staffId.fullName=""}).error(function(response){$scope.error=response.message})}):$location.path("/signin")}]),angular.module("staffs").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var parsedFileSetter=$parse(attrs.fileModel).assign;element.bind("change",function(){scope.$apply(function(){parsedFileSetter(scope,element[0].files[0])})})}}}]),angular.module("staffs").service("Uploadfileservice",["$http",function($http){this.upload=function(file,id,url){var data={model:id,file:file},fd=new FormData;return fd.append("iddetails",angular.toJson(data.model)),fd.append("idphoto",data.file.upload),$http.post(url,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("students").config(["$stateProvider",function($stateProvider){$stateProvider.state("claimstudentid",{url:"/claimstudentid/:id",templateUrl:"modules/students/views/claimstudentid.client.view.html"}).state("poststudentid",{url:"/poststudentid",templateUrl:"modules/students/views/poststudentid.client.view.html"}).state("studentids",{url:"/studentids",templateUrl:"modules/students/views/studentids.client.view.html"})}]),angular.module("students").controller("ClaimstudentidController",["$scope","$http","$location","Authentication","$stateParams","$window",function($scope,$http,$location,Authentication,$stateParams,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.showMpesa=!1,$scope.showAirtel=!1,$scope.toggleMpesa=function(){$scope.showMpesa=!0,$scope.showAirtel=!1},$scope.toggleAirtel=function(){$scope.showAirtel=!0,$scope.showMpesa=!1},$scope.claim=function(){$scope.authentication.user.accountBalance<200&&$http.get("/studentid/"+$stateParams.id).success(function(res){$scope.id=res}).error(function(res){$scope.error=res.message})}):$location.path("/signin")}]),angular.module("students").controller("PoststudentidController",["$scope","$timeout","$location","$interval","Authentication","Uploadfileservice","$window",function($scope,$timeout,$location,$interval,Authentication,Uploadstudentidservice,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.file={},$scope.Submit=function(){$scope.uploading=!0,$scope.id.finderNumber=$scope.authentication.user.username;Uploadstudentidservice.upload($scope.file,$scope.id,"/poststudentid").then(function(data){data.data.success?($scope.alert="alert alert-success",$scope.message=data.data.message,$scope.file={},$scope.uploading=!1,$interval(function(){$location.path("/studentids")},2e3,1,!1)):($scope.uploading=!1,$scope.alert="alert alert-danger",$scope.message=data.data.message,$scope.file={})})},$scope.photoChanged=function(files){if(files.length>0&&files[0].name.match(/\.(png|jpg|jpeg)$/)){$scope.uploading=!0;var file=files[0],fileReader=new FileReader;fileReader.readAsDataURL(file),fileReader.onload=function(e){$timeout(function(){$scope.thumbnail={},$scope.thumbnail.dataUrl=e.target.result,$scope.uploading=!1,$scope.message=!1})}}else $scope.thumbnail={},$scope.message=!1}):$location.path("/signin")}]),angular.module("students").controller("StudentidsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$http.get("/studentids").success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.getAlert=function(){$scope.studentId.mobileNumber=Authentication.user.username,$http.post("/studentidalert",$scope.studentId).success(function(response){$scope.message=response.message,$scope.studentId.admissionNumber="",$scope.studentId.schoolName=""}).error(function(response){$scope.error=response.message})}):$location.path("/signin")}]),angular.module("students").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var parsedFileSetter=$parse(attrs.fileModel).assign;element.bind("change",function(){scope.$apply(function(){parsedFileSetter(scope,element[0].files[0])})})}}}]),angular.module("students").service("Uploadfileservice",["$http",function($http){this.upload=function(file,id,url){var data={model:id,file:file},fd=new FormData;return fd.append("iddetails",angular.toJson(data.model)),fd.append("idphoto",data.file.upload),$http.post(url,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin")}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("adminsignup",{url:"/adminsignup",templateUrl:"modules/users/views/adminsignup.client.view.html"}).state("mypassports",{url:"/mypassports",templateUrl:"modules/users/views/mypassports.client.view.html"}).state("mydls",{url:"/mydls",templateUrl:"modules/users/views/mydls.client.view.html"}).state("mycertificates",{url:"/mycertificates",templateUrl:"modules/users/views/mycertificates.client.view.html"}).state("mynhifs",{url:"/mynhifs",templateUrl:"modules/users/views/mynhifs.client.view.html"}).state("myatms",{url:"/myatms",templateUrl:"modules/users/views/myatms.client.view.html"}).state("mystaffids",{url:"/mystaffids",templateUrl:"modules/users/views/mystaffids.client.view.html"}).state("mystudentids",{url:"/mystudentids",templateUrl:"modules/users/views/mystudentids.client.view.html"}).state("myids",{url:"/myids",templateUrl:"modules/users/views/myids.client.view.html"}).state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AdminsignupController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/adminsignup",$scope.credentials).success(function(response){$scope.authentication.user=response,$window.sessionStorage.user=JSON.stringify(response),$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$window.sessionStorage.user=JSON.stringify(response),$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$window.sessionStorage.user=JSON.stringify(response),$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("MyatmsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication?($scope.show=!1,$scope.credentials={},$scope.find=function(){$http.get("/atms/"+$scope.authentication.user.username).success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.toggle=function(){$scope.show=!0},$scope.payUser=function(){$scope.ids.forEach(function(id){!0===id.claimed&&id.sakaDocsCode.toUpperCase()===$scope.credentials.sakaDocsCode.toUpperCase()?($scope.credentials.userNumber=$scope.authentication.user.username,$scope.credentials.docType="atm",$http.post("/payuser",$scope.credentials).success(function(res){$scope.message=res.message}).error(function(res){$scope.error=res.message})):!1===id.claimed&&($scope.error="This ATM has not been claimed yet")})}):$location.path("/signin")}]),angular.module("users").controller("MycertificatesController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$scope.show=!1,$scope.credentials={},$http.get("/certificates/"+$scope.authentication.user.username).success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.toggle=function(){$scope.show=!0},$scope.payUser=function(){$scope.ids.forEach(function(id){!0===id.claimed&&id.sakaDocsCode.toUpperCase()===$scope.credentials.sakaDocsCode.toUpperCase()?($scope.credentials.userNumber=$scope.authentication.user.username,$scope.credentials.docType="certificate",$http.post("/payuser",$scope.credentials).success(function(res){$scope.message=res.message}).error(function(res){$scope.error=res.message})):!1===id.claimed&&($scope.error="This ID has not been claimed yet")})}):$location.path("/signin")}]),angular.module("users").controller("MydlsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.show=!1,$scope.find=function(){$scope.show=!1,$scope.credentials={},$http.get("/dls/"+$scope.authentication.user.username).success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.toggle=function(){$scope.show=!0},$scope.payUser=function(){$scope.ids.forEach(function(id){!0===id.claimed&&id.sakaDocsCode.toUpperCase()===$scope.credentials.sakaDocsCode.toUpperCase()?($scope.credentials.userNumber=$scope.authentication.user.username,$scope.credentials.docType="dl",$http.post("/payuser",$scope.credentials).success(function(res){$scope.message=res.message}).error(function(res){$scope.error=res.message})):!1===id.claimed&&($scope.error="This ID has not been claimed yet")})}):$location.path("/signin")}]),angular.module("users").controller("MyidsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.show=!1,$scope.credentials={},$scope.find=function(){$http.get("/nationalids/"+$scope.authentication.user.username).success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.toggle=function(){$scope.show=!0},$scope.payUser=function(){$scope.ids.forEach(function(id){!0===id.claimed&&id.sakaDocsCode.toUpperCase()===$scope.credentials.sakaDocsCode.toUpperCase()?($scope.credentials.userNumber=$scope.authentication.user.username,$scope.credentials.docType="national",$http.post("/payuser",$scope.credentials).success(function(res){$scope.message=res.message}).error(function(res){$scope.error=res.message})):!1===id.claimed&&($scope.error="This ID has not been claimed yet")})}):$location.path("/signin")}]),angular.module("users").controller("MynhifsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$scope.show=!1,$scope.credentials={},$http.get("/nhifcards/"+$scope.authentication.user.username).success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.toggle=function(){$scope.show=!0},$scope.payUser=function(){$scope.ids.forEach(function(id){!0===id.claimed&&id.sakaDocsCode.toUpperCase()===$scope.credentials.sakaDocsCode.toUpperCase()?($scope.credentials.userNumber=$scope.authentication.user.username,$scope.credentials.docType="nhif",$http.post("/payuser",$scope.credentials).success(function(res){$scope.message=res.message}).error(function(res){$scope.error=res.message})):!1===id.claimed&&($scope.error="This ID has not been claimed yet")})}):$location.path("/signin")}]),angular.module("users").controller("MypassportsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$scope.show=!1,$scope.credentials={},$http.get("/passports/"+$scope.authentication.user.username).success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.toggle=function(){$scope.show=!0},$scope.payUser=function(){$scope.ids.forEach(function(id){!0===id.claimed&&id.sakaDocsCode.toUpperCase()===$scope.credentials.sakaDocsCode.toUpperCase()?($scope.credentials.userNumber=$scope.authentication.user.username,$scope.credentials.docType="passport",$http.post("/payuser",$scope.credentials).success(function(res){$scope.message=res.message}).error(function(res){$scope.error=res.message})):!1===id.claimed&&($scope.error="This ID has not been claimed yet")})}):$location.path("/signin")}]),angular.module("users").controller("MystaffidsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$scope.show=!1,$scope.credentials={},$http.get("/staffids/"+$scope.authentication.user.username).success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.toggle=function(){$scope.show=!0},$scope.payUser=function(){$scope.ids.forEach(function(id){!0===id.claimed&&id.sakaDocsCode.toUpperCase()===$scope.credentials.sakaDocsCode.toUpperCase()?($scope.credentials.userNumber=$scope.authentication.user.username,$scope.credentials.docType="staffid",$http.post("/payuser",$scope.credentials).success(function(res){$scope.message=res.message}).error(function(res){$scope.error=res.message})):!1===id.claimed&&($scope.error="This ID has not been claimed yet")})}):$location.path("/signin")}]),angular.module("users").controller("MystudentidsController",["$scope","$http","$location","Authentication","$window",function($scope,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user?($scope.find=function(){$scope.show=!1,$scope.credentials={},$http.get("/studentids/"+$scope.authentication.user.username).success(function(res){$scope.ids=res,$scope.alert="alert alert-danger"}).error(function(res){$scope.error=res.message})},$scope.toggle=function(){$scope.show=!0},$scope.payUser=function(){$scope.ids.forEach(function(id){!0===id.claimed&&id.sakaDocsCode.toUpperCase()===$scope.credentials.sakaDocsCode.toUpperCase()?($scope.credentials.userNumber=$scope.authentication.user.username,$scope.credentials.docType="studentid",$http.post("/payuser",$scope.credentials).success(function(res){$scope.message=res.message}).error(function(res){$scope.error=res.message})):!1===id.claimed&&($scope.error="This ID has not been claimed yet")})}):$location.path("/signin")}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","$window",function($scope,$stateParams,$http,$location,Authentication,$window){$scope.authentication=Authentication,$window.sessionStorage.user&&($scope.authentication.user=JSON.parse($window.sessionStorage.user)),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","$window",function($scope,$http,$location,Users,Authentication,$window){$scope.user=Authentication.user,$window.sessionStorage.user&&($scope.user=JSON.parse($window.sessionStorage.user)),$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){isValid?($scope.success=$scope.error=null,new Users($scope.user).$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})):$scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").directive("equals",[function(){return{restrict:"A",require:"?ngModel",link:function(scope,elem,attrs,ngModel){if(ngModel){scope.$watch(attrs.ngModel,function(){validate()}),attrs.$observe("equals",function(val){validate()});var validate=function(){var val1=ngModel.$viewValue,val2=attrs.equals;ngModel.$setValidity("equals",!val1||!val2||val1===val2)}}}}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);